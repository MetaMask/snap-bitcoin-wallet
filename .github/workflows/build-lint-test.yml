name: Build, Lint, and Test

on:
  workflow_call:

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Enable Corepack
        run: corepack enable
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'
      - name: Install Yarn dependencies
        run: yarn --immutable

  build:
    name: Build
    runs-on: ubuntu-latest
    needs:
      - prepare
    strategy:
      matrix:
        node-version: [20.x, 22.x]
    steps:
      - uses: actions/checkout@v4
      - name: Enable Corepack
        run: corepack enable
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
      - run: yarn --immutable --immutable-cache
      - run: |
          export NODE_OPTIONS="--max_old_space_size=4096"
          yarn build
      - name: Require clean working directory
        shell: bash
        run: |
          if ! git diff --exit-code -- ':!/packages/snap/snap.manifest.json'; then
            echo "Working tree dirty at end of job"
            exit 1
          fi

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs:
      - prepare
    strategy:
      matrix:
        node-version: [20.x, 22.x]
    steps:
      - uses: actions/checkout@v4
      - name: Enable Corepack
        run: corepack enable
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
      - run: yarn --immutable --immutable-cache
      - run: yarn lint
      - name: Validate RC changelog
        if: ${{ startsWith(github.head_ref, 'release/') }}
        run: yarn workspaces foreach --all --parallel --topological --verbose run auto-changelog validate --prettier --rc
      - name: Validate changelog
        if: ${{ !startsWith(github.head_ref, 'release/') }}
        run: yarn workspaces foreach --all --parallel --topological --verbose run auto-changelog validate --prettier
      - name: Require clean working directory
        shell: bash
        run: |
          if ! git diff --exit-code -- ':!/packages/snap/snap.manifest.json'; then
            echo "Working tree dirty at end of job"
            exit 1
          fi

  test:
    name: Test
    runs-on: ubuntu-latest
    needs:
      - prepare
    strategy:
      matrix:
        node-version: [20.x, 22.x]
    steps:
      - uses: actions/checkout@v4
      - name: Enable Corepack
        run: corepack enable
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
      - run: yarn --immutable --immutable-cache
      - run: |
          export NODE_OPTIONS="--max_old_space_size=4096"
          yarn build
      - run: yarn test
      - name: Require clean working directory
        shell: bash
        run: |
          if ! git diff --exit-code -- ':!/packages/snap/snap.manifest.json'; then
            echo "Working tree dirty at end of job"
            exit 1
          fi

  integration-test:
    name: Integration Test
    runs-on: ubuntu-latest
    needs:
      - prepare
    env:
      KEYRING_VERSION: v2
    steps:
      - uses: actions/checkout@v4
      - name: Enable Corepack
        run: corepack enable
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'yarn'
      - run: yarn --immutable
      - run: |
          export NODE_OPTIONS="--max_old_space_size=4096"
          yarn build:snap
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
      - run: yarn test:integration
