/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function __wbg_esplorammwallet_free(a: number, b: number): void;
export function esplorammwallet_new(a: number, b: number, c: number, d: number, e: number, f: number, g: number): number;
export function esplorammwallet_full_scan(a: number, b: number, c: number): number;
export function esplorammwallet_sync(a: number, b: number): number;
export function esplorammwallet_balance(a: number): number;
export function esplorammwallet_next_unused_address(a: number, b: number): number;
export function esplorammwallet_peek_address(a: number, b: number, c: number): number;
export function esplorammwallet_reveal_next_address(a: number, b: number): number;
export function esplorammwallet_list_unused_addresses(a: number, b: number): Array;
export function esplorammwallet_take_staged(a: number): number;
export function esplorammwallet_get_block_by_hash(a: number, b: number, c: number): number;
export function esplorammwallet_persist(a: number): number;
export function mnemonic_to_descriptor(a: number, b: number, c: number, d: number, e: number, f: number): Array;
export function xpriv_to_descriptor(a: number, b: number, c: number, d: number, e: number, f: number): Array;
export function xpub_to_descriptor(a: number, b: number, c: number, d: number, e: number, f: number): Array;
export function mnemonic_to_xpriv(a: number, b: number, c: number, d: number, e: number): Array;
export function slip10_to_extended(a: number, b: number): Array;
export function __wbg_addressinfo_free(a: number, b: number): void;
export function addressinfo_index(a: number): number;
export function addressinfo_address(a: number): Array;
export function addressinfo_keychain(a: number): number;
export function addressinfo_address_type(a: number): number;
export function __wbg_esplorawallet_free(a: number, b: number): void;
export function esplorawallet_from_descriptors(a: number, b: number, c: number, d: number, e: number, f: number, g: number): Array;
export function esplorawallet_from_mnemonic(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number): Array;
export function esplorawallet_from_xpriv(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number): Array;
export function esplorawallet_from_xpub(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number): Array;
export function esplorawallet_load(a: number, b: number, c: number): Array;
export function esplorawallet_full_scan(a: number, b: number, c: number): number;
export function esplorawallet_sync(a: number, b: number): number;
export function esplorawallet_network(a: number): number;
export function esplorawallet_balance(a: number): number;
export function esplorawallet_next_unused_address(a: number, b: number): number;
export function esplorawallet_peek_address(a: number, b: number, c: number): number;
export function esplorawallet_reveal_next_address(a: number, b: number): number;
export function esplorawallet_reveal_addresses_to(a: number, b: number, c: number): Array;
export function esplorawallet_list_unused_addresses(a: number, b: number): Array;
export function esplorawallet_list_unspent(a: number): Array;
export function esplorawallet_transactions(a: number): Array;
export function esplorawallet_take_staged(a: number): Array;
export function esplorawallet_get_block_by_hash(a: number, b: number, c: number): number;
export function __wbg_balance_free(a: number, b: number): void;
export function balance_immature(a: number): number;
export function balance_trusted_pending(a: number): number;
export function balance_untrusted_pending(a: number): number;
export function balance_confirmed(a: number): number;
export function balance_trusted_spendable(a: number): number;
export function balance_total(a: number): number;
export function __wbg_descriptorpair_free(a: number, b: number): void;
export function descriptorpair_new(a: number, b: number, c: number, d: number): number;
export function descriptorpair_internal(a: number): Array;
export function descriptorpair_external(a: number): Array;
export function rustsecp256k1_v0_10_0_context_create(a: number): number;
export function rustsecp256k1_v0_10_0_context_destroy(a: number): void;
export function rustsecp256k1_v0_10_0_default_illegal_callback_fn(a: number, b: number): void;
export function rustsecp256k1_v0_10_0_default_error_callback_fn(a: number, b: number): void;
export function __wbindgen_malloc(a: number, b: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number, d: number): number;
export const __wbindgen_export_2: WebAssembly.Table;
export const __wbindgen_export_3: WebAssembly.Table;
export function closure753_externref_shim(a: number, b: number, c: number): void;
export function _dyn_core__ops__function__FnMut_____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h181f615f2ab935e8(a: number, b: number): void;
export function __externref_drop_slice(a: number, b: number): void;
export function __wbindgen_free(a: number, b: number, c: number): void;
export function __externref_table_dealloc(a: number): void;
export function __wbindgen_exn_store(a: number): void;
export function __externref_table_alloc(): number;
export function closure1223_externref_shim(a: number, b: number, c: number, d: number): void;
export function __wbindgen_start(): void;
